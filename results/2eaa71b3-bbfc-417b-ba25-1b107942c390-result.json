{"name": "Загрузка изображения невалидного формата", "status": "failed", "statusDetails": {"message": "AssertionError: Система принимает изображения в формате ico (отсутствует ошибка)\nassert True is False\n +  where True = add_image('invalid_image.ico')\n +    where add_image = <class_ui.Ui object at 0x00000273744E2E70>.add_image", "trace": "ui = <class_ui.Ui object at 0x00000273744E2E70>\n\n    @allure.title(\"Загрузка изображения невалидного формата\")\n    def test_add_invalid_image(ui):\n        with allure.step(\"Загрузка изображения формата 'ico'\"):\n>           assert ui.add_image(\"invalid_image.ico\") is False, 'Система принимает изображения в формате ico (отсутствует ошибка)'\nE           AssertionError: Система принимает изображения в формате ico (отсутствует ошибка)\nE           assert True is False\nE            +  where True = add_image('invalid_image.ico')\nE            +    where add_image = <class_ui.Ui object at 0x00000273744E2E70>.add_image\n\ntest_lenza.py:139: AssertionError"}, "steps": [{"name": "Загрузка изображения формата 'ico'", "status": "failed", "statusDetails": {"message": "AssertionError: Система принимает изображения в формате ico (отсутствует ошибка)\nassert True is False\n +  where True = add_image('invalid_image.ico')\n +    where add_image = <class_ui.Ui object at 0x00000273744E2E70>.add_image\n", "trace": "  File \"c:\\Users\\Ихарь\\Documents\\GitHub\\gg\\test_lenza.py\", line 139, in test_add_invalid_image\n    assert ui.add_image(\"invalid_image.ico\") is False, 'Система принимает изображения в формате ico (отсутствует ошибка)'\n"}, "start": 1753263427139, "stop": 1753263429192}], "start": 1753263427139, "stop": 1753263429202, "uuid": "e3239a41-2115-4f55-af16-4db5854ba7f0", "historyId": "a755bde9940ff51e918fb00520c1dc8e", "testCaseId": "a755bde9940ff51e918fb00520c1dc8e", "fullName": "test_lenza#test_add_invalid_image", "labels": [{"name": "suite", "value": "test_lenza"}, {"name": "host", "value": "DESKTOP-C1CAU9K"}, {"name": "thread", "value": "13944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_lenza"}]}